<style>
body {
  background: #fcfcfa;
  height: 500px;
  position: relative;
  width: 960px;
}

.stroke {
  fill: none;
  stroke: #fff;
  stroke-width: 3px;
}
.fill {
  fill: #0067b9;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}
</style>
<script src="//d3js.org/d3.v4.min.js"></script>
<script src="//d3js.org/d3-geo-projection.v1.min.js"></script>
<script src="//d3js.org/topojson.v2.min.js"></script>
<script>
var width = 9600,
    height = 5000;

var projection = d3.geoEquirectangular();
var path = d3.geoPath(projection);
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);
svg.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);
svg.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");
svg.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");


d3.json("http://localhost:3000/official_polygons.json", function(error, world) {
  d3.json("http://localhost:3000/included_countries.json", function(error, countries) {
    world = JSON.parse(world)
    dashboardCountries = JSON.parse(countries)
    dashboardCountryCodes = Object.keys(dashboardCountries).map(country => dashboardCountries[country].code)
    
    isIncludedCountries = world.features.filter(feature => dashboardCountryCodes.includes(feature.properties.CNTRY_CODE))
    
    for (i = 0; i < isIncludedCountries.length; i++){
      isIncludedCountries[i].properties.fill_color = "#b1cbe2";
      countryKey = Object.keys(dashboardCountries).filter(country => dashboardCountries[country].code === isIncludedCountries[i].properties.CNTRY_CODE)
      isIncludedCountries[i].properties.slug = countryKey
      isIncludedCountries[i].properties.official_name = dashboardCountries[countryKey].name
    }

    notIncludedCountries = world.features.filter(feature => !dashboardCountryCodes.includes(feature.properties.CNTRY_CODE))

    for (i = 0; i < notIncludedCountries.length; i++){
      notIncludedCountries[i].properties.fill_color = "#fff";
    }


    if (error) throw error;

      svg.selectAll("path")
        .data(world.features)
        .enter()
        .append("a")
          
        .attr("xlink:href", function(d) {return "https://advise.devtechlab.com/country/" + d.properties.slug})
          .append("path")
          .attr("class", "land")
          .attr("fill", function(d,i){
          return d.properties.fill_color
          })
          .attr("d", path)
          .append("svg:title")
          .text(function(d,i){if(d.properties.official_name) return d.properties.official_name})
          
        ;

       
  });
});
</script>
